{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cyber Defense\\\\Desktop\\\\driver\\\\frontend\\\\src\\\\components\\\\TripMap.js\";\n// src/components/TripMap.js\nimport React from 'react';\nimport { MapContainer, TileLayer, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css'; // Required for Leaflet styling\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TripMap = ({\n  route\n}) => {\n  if (!route || !route.features || !route.features[0]) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: \"No route data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Convert GeoJSON coordinates from [lng, lat] to [lat, lng] for Leaflet\n  const positions = route.features[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Route Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: positions[0] // Center on starting point\n      ,\n      zoom: 5,\n      style: {\n        width: '100%',\n        height: '400px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: positions,\n        color: \"#007bff\",\n        weight: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = TripMap;\nexport default TripMap;\nvar _c;\n$RefreshReg$(_c, \"TripMap\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Polyline","jsxDEV","_jsxDEV","TripMap","route","features","className","children","fileName","_jsxFileName","lineNumber","columnNumber","positions","geometry","coordinates","map","coord","center","zoom","style","width","height","url","attribution","color","weight","_c","$RefreshReg$"],"sources":["C:/Users/Cyber Defense/Desktop/driver/frontend/src/components/TripMap.js"],"sourcesContent":["// src/components/TripMap.js\r\nimport React from 'react';\r\nimport { MapContainer, TileLayer, Polyline } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css'; // Required for Leaflet styling\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst TripMap = ({ route }) => {\r\n    if (!route || !route.features || !route.features[0]) {\r\n        return <div className=\"mt-4\">No route data available</div>;\r\n    }\r\n\r\n    // Convert GeoJSON coordinates from [lng, lat] to [lat, lng] for Leaflet\r\n    const positions = route.features[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\r\n\r\n    return (\r\n        <div className=\"mt-4\">\r\n            <h3>Route Map</h3>\r\n            <MapContainer\r\n                center={positions[0]} // Center on starting point\r\n                zoom={5}\r\n                style={{ width: '100%', height: '400px' }}\r\n            >\r\n                <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution='Â© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n                />\r\n                <Polyline positions={positions} color=\"#007bff\" weight={5} />\r\n            </MapContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TripMap"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,eAAe;AACjE,OAAO,0BAA0B,CAAC,CAAC;AACnC,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC3B,IAAI,CAACA,KAAK,IAAI,CAACA,KAAK,CAACC,QAAQ,IAAI,CAACD,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,EAAE;IACjD,oBAAOH,OAAA;MAAKI,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9D;;EAEA;EACA,MAAMC,SAAS,GAAGR,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACQ,QAAQ,CAACC,WAAW,CAACC,GAAG,CAACC,KAAK,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EAE3F,oBACId,OAAA;IAAKI,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBL,OAAA;MAAAK,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBT,OAAA,CAACJ,YAAY;MACTmB,MAAM,EAAEL,SAAS,CAAC,CAAC,CAAE,CAAC;MAAA;MACtBM,IAAI,EAAE,CAAE;MACRC,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAd,QAAA,gBAE1CL,OAAA,CAACH,SAAS;QACNuB,GAAG,EAAC,oDAAoD;QACxDC,WAAW,EAAC;MAAuE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtF,CAAC,eACFT,OAAA,CAACF,QAAQ;QAACY,SAAS,EAAEA,SAAU;QAACY,KAAK,EAAC,SAAS;QAACC,MAAM,EAAE;MAAE;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEd,CAAC;AAACe,EAAA,GAxBIvB,OAAO;AA0Bb,eAAeA,OAAO;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}