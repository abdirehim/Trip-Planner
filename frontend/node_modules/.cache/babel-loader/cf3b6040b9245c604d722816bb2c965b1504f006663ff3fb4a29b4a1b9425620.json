{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cyber Defense\\\\Desktop\\\\driver\\\\frontend\\\\src\\\\components\\\\TripMap.js\";\n// src/components/TripMap.js\nimport React from 'react';\nimport { MapContainer, TileLayer, Polyline, Marker, Popup, Tooltip } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TripMap = ({\n  route,\n  logSheets,\n  fueling_stops,\n  total_distance\n}) => {\n  if (!route || !route.features || !route.features[0]) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning mt-4\",\n      children: \"No route data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  }\n  const positions = route.features[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n  const startIcon = new L.Icon({\n    iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41]\n  });\n  const stopIcon = new L.Icon({\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41]\n  });\n  const fuelIcon = new L.Icon({\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41]\n  });\n  const restIcon = new L.Icon({\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41]\n  });\n  const keyPoints = [{\n    pos: positions[0],\n    label: 'Start (New York, NY)',\n    icon: startIcon\n  }, {\n    pos: positions[Math.floor(positions.length / 2)],\n    label: 'Pickup (Chicago, IL)',\n    icon: stopIcon\n  }, {\n    pos: positions[positions.length - 1],\n    label: 'Drop-off (Los Angeles, CA)',\n    icon: stopIcon\n  }];\n\n  // Add fueling stops based on distances from backend\n  if (fueling_stops && total_distance) {\n    fueling_stops.forEach(stop => {\n      const positionIndex = Math.floor(stop.distance / total_distance * positions.length);\n      keyPoints.push({\n        pos: positions[positionIndex] || positions[0],\n        label: `Fueling Stop (~${stop.distance.toFixed(0)} miles)`,\n        icon: fuelIcon,\n        day: stop.day\n      });\n    });\n  }\n\n  // Add rest stops from log sheets\n  if (logSheets) {\n    logSheets.forEach(sheet => {\n      const restStart = sheet.log.indexOf('SB');\n      if (restStart !== -1) {\n        const restPosition = positions[Math.floor(restStart / 24 * positions.length)];\n        keyPoints.push({\n          pos: restPosition,\n          label: `Rest Day ${sheet.day}`,\n          icon: restIcon\n        });\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: \"Route Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: positions[0],\n        zoom: 4,\n        style: {\n          height: '400px',\n          width: '100%'\n        },\n        className: \"map\",\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: positions,\n          color: \"#007bff\",\n          weight: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), keyPoints.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: point.pos,\n          icon: point.icon,\n          children: [/*#__PURE__*/_jsxDEV(Popup, {\n            children: point.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            permanent: false,\n            direction: \"top\",\n            offset: [0, -10],\n            children: point.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_c = TripMap;\nexport default TripMap;\nvar _c;\n$RefreshReg$(_c, \"TripMap\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Polyline","Marker","Popup","Tooltip","L","jsxDEV","_jsxDEV","TripMap","route","logSheets","fueling_stops","total_distance","features","className","children","fileName","_jsxFileName","lineNumber","columnNumber","positions","geometry","coordinates","map","coord","startIcon","Icon","iconUrl","iconSize","iconAnchor","stopIcon","fuelIcon","restIcon","keyPoints","pos","label","icon","Math","floor","length","forEach","stop","positionIndex","distance","push","toFixed","day","sheet","restStart","log","indexOf","restPosition","center","zoom","style","height","width","url","attribution","color","weight","point","index","position","permanent","direction","offset","_c","$RefreshReg$"],"sources":["C:/Users/Cyber Defense/Desktop/driver/frontend/src/components/TripMap.js"],"sourcesContent":["// src/components/TripMap.js\r\nimport React from 'react';\r\nimport { MapContainer, TileLayer, Polyline, Marker, Popup, Tooltip } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst TripMap = ({ route, logSheets, fueling_stops, total_distance }) => {\r\n    if (!route || !route.features || !route.features[0]) {\r\n        return <div className=\"alert alert-warning mt-4\">No route data available</div>;\r\n    }\r\n\r\n    const positions = route.features[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\r\n    const startIcon = new L.Icon({ iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png', iconSize: [25, 41], iconAnchor: [12, 41] });\r\n    const stopIcon = new L.Icon({ iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png', iconSize: [25, 41], iconAnchor: [12, 41] });\r\n    const fuelIcon = new L.Icon({ iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png', iconSize: [25, 41], iconAnchor: [12, 41] });\r\n    const restIcon = new L.Icon({ iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png', iconSize: [25, 41], iconAnchor: [12, 41] });\r\n\r\n    const keyPoints = [\r\n        { pos: positions[0], label: 'Start (New York, NY)', icon: startIcon },\r\n        { pos: positions[Math.floor(positions.length / 2)], label: 'Pickup (Chicago, IL)', icon: stopIcon },\r\n        { pos: positions[positions.length - 1], label: 'Drop-off (Los Angeles, CA)', icon: stopIcon },\r\n    ];\r\n\r\n    // Add fueling stops based on distances from backend\r\n    if (fueling_stops && total_distance) {\r\n        fueling_stops.forEach(stop => {\r\n            const positionIndex = Math.floor((stop.distance / total_distance) * positions.length);\r\n            keyPoints.push({ pos: positions[positionIndex] || positions[0], label: `Fueling Stop (~${stop.distance.toFixed(0)} miles)`, icon: fuelIcon, day: stop.day });\r\n        });\r\n    }\r\n\r\n    // Add rest stops from log sheets\r\n    if (logSheets) {\r\n        logSheets.forEach(sheet => {\r\n            const restStart = sheet.log.indexOf('SB');\r\n            if (restStart !== -1) {\r\n                const restPosition = positions[Math.floor((restStart / 24) * positions.length)];\r\n                keyPoints.push({ pos: restPosition, label: `Rest Day ${sheet.day}`, icon: restIcon });\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"card map-container\">\r\n            <div className=\"card-header\">Route Map</div>\r\n            <div className=\"card-body\">\r\n                <MapContainer\r\n                    center={positions[0]}\r\n                    zoom={4}\r\n                    style={{ height: '400px', width: '100%' }}\r\n                    className=\"map\"\r\n                >\r\n                    <TileLayer\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        attribution='Â© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n                    />\r\n                    <Polyline positions={positions} color=\"#007bff\" weight={5} />\r\n                    {keyPoints.map((point, index) => (\r\n                        <Marker key={index} position={point.pos} icon={point.icon}>\r\n                            <Popup>{point.label}</Popup>\r\n                            <Tooltip permanent={false} direction=\"top\" offset={[0, -10]}>\r\n                                {point.label}\r\n                            </Tooltip>\r\n                        </Marker>\r\n                    ))}\r\n                </MapContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TripMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}