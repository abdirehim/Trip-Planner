{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cyber Defense\\\\Desktop\\\\driver\\\\frontend\\\\src\\\\components\\\\LogSheet.js\";\n// src/components/LogSheet.js\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogSheet = ({\n  logSheets\n}) => {\n  if (!logSheets || logSheets.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning mt-4\",\n      children: \"No log sheets available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 16\n    }, this);\n  }\n  const getStatusDescription = status => ({\n    ON: 'On Duty (e.g., loading/unloading)',\n    D: 'Driving',\n    SB: 'Sleeper Berth (rest)',\n    OFF: 'Off Duty'\n  })[status] || 'Unknown';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-sheet\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"card-title\",\n      children: \"Daily Log Sheets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), logSheets.map(sheet => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [\"Day \", sheet.day]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Hour\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 37\n              }, this), Array.from({\n                length: 24\n              }, (_, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: i\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 37\n              }, this), sheet.log.map((status, hour) => /*#__PURE__*/_jsxDEV(\"td\", {\n                className: `${status === 'D' ? 'bg-primary' : status === 'ON' ? 'bg-warning' : status === 'SB' ? 'bg-success' : 'bg-secondary'} text-center`,\n                title: getStatusDescription(status),\n                children: status\n              }, hour, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, sheet.day, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c = LogSheet;\nexport default LogSheet;\nvar _c;\n$RefreshReg$(_c, \"LogSheet\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LogSheet","logSheets","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getStatusDescription","status","ON","D","SB","OFF","map","sheet","day","Array","from","_","i","log","hour","title","_c","$RefreshReg$"],"sources":["C:/Users/Cyber Defense/Desktop/driver/frontend/src/components/LogSheet.js"],"sourcesContent":["// src/components/LogSheet.js\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst LogSheet = ({ logSheets }) => {\r\n    if (!logSheets || logSheets.length === 0) {\r\n        return <div className=\"alert alert-warning mt-4\">No log sheets available</div>;\r\n    }\r\n\r\n    const getStatusDescription = (status) => ({\r\n        ON: 'On Duty (e.g., loading/unloading)',\r\n        D: 'Driving',\r\n        SB: 'Sleeper Berth (rest)',\r\n        OFF: 'Off Duty'\r\n    }[status] || 'Unknown');\r\n\r\n    return (\r\n        <div className=\"log-sheet\">\r\n            <h3 className=\"card-title\">Daily Log Sheets</h3>\r\n            {logSheets.map((sheet) => (\r\n                <div key={sheet.day} className=\"card mb-3\">\r\n                    <div className=\"card-header\">Day {sheet.day}</div>\r\n                    <div className=\"card-body\">\r\n                        <table className=\"table table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Hour</th>\r\n                                    {Array.from({ length: 24 }, (_, i) => (\r\n                                        <th key={i}>{i}</th>\r\n                                    ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Status</td>\r\n                                    {sheet.log.map((status, hour) => (\r\n                                        <td\r\n                                            key={hour}\r\n                                            className={`${\r\n                                                status === 'D' ? 'bg-primary' :\r\n                                                status === 'ON' ? 'bg-warning' :\r\n                                                status === 'SB' ? 'bg-success' :\r\n                                                'bg-secondary'\r\n                                            } text-center`}\r\n                                            title={getStatusDescription(status)}\r\n                                        >\r\n                                            {status}\r\n                                        </td>\r\n                                    ))}\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogSheet;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}