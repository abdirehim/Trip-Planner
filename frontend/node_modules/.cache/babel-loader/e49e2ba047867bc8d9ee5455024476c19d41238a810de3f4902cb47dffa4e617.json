{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cyber Defense\\\\Desktop\\\\driver\\\\frontend\\\\src\\\\components\\\\LogSheet.js\";\n// // src/components/LogSheet.js\n// import React from 'react';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const LogSheet = ({ logSheets }) => {\n//     if (!logSheets || logSheets.length === 0) {\n//         return <div className=\"alert alert-warning mt-4\">No log sheets available</div>;\n//     }\n\n//     const getStatusDescription = (status) => ({\n//         ON: 'On Duty (e.g., loading/unloading)',\n//         D: 'Driving',\n//         SB: 'Sleeper Berth (rest)',\n//         OFF: 'Off Duty'\n//     }[status] || 'Unknown');\n\n//     return (\n//         <div className=\"log-sheet\">\n//             <h3 className=\"card-title\">Daily Log Sheets</h3>\n//             {logSheets.map((sheet) => (\n//                 <div key={sheet.day} className=\"card mb-3\">\n//                     <div className=\"card-header\">Day {sheet.day}</div>\n//                     <div className=\"card-body\">\n//                         <table className=\"table table-bordered\">\n//                             <thead>\n//                                 <tr>\n//                                     <th>Hour</th>\n//                                     {Array.from({ length: 24 }, (_, i) => (\n//                                         <th key={i}>{i}</th>\n//                                     ))}\n//                                 </tr>\n//                             </thead>\n//                             <tbody>\n//                                 <tr>\n//                                     <td>Status</td>\n//                                     {sheet.log.map((status, hour) => (\n//                                         <td\n//                                             key={hour}\n//                                             className={`${\n//                                                 status === 'D' ? 'bg-primary' :\n//                                                 status === 'ON' ? 'bg-warning' :\n//                                                 status === 'SB' ? 'bg-success' :\n//                                                 'bg-secondary'\n//                                             } text-center`}\n//                                             title={getStatusDescription(status)}\n//                                         >\n//                                             {status}\n//                                         </td>\n//                                     ))}\n//                                 </tr>\n//                             </tbody>\n//                         </table>\n//                     </div>\n//                 </div>\n//             ))}\n//         </div>\n//     );\n// };\n\n// export default LogSheet;\n\n// import React from 'react';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const LogSheet = ({ logSheets }) => {\n//     if (!logSheets || logSheets.length === 0) {\n//         return <div className=\"alert alert-info mt-4\">No log sheets available</div>;\n//     }\n\n//     const getStatusClass = (status) => {\n//         switch (status) {\n//             case 'ON': return 'bg-warning text-white';\n//             case 'D': return 'bg-primary text-white';\n//             case 'SB': return 'bg-success text-white';\n//             case 'OFF': return 'bg-secondary text-white';\n//             default: return 'bg-light';\n//         }\n//     };\n\n//     const calculateMilesDriven = (drivingHours) => {\n//         const avgSpeed = 60; // From backend AVG_SPEED\n//         return drivingHours * avgSpeed;\n//     };\n\n//     const calculateStatusHours = (log) => {\n//         const statusCounts = { ON: 0, D: 0, SB: 0, OFF: 0 };\n//         log.forEach(status => {\n//             statusCounts[status] = (statusCounts[status] || 0) + 1;\n//         });\n//         return statusCounts;\n//     };\n\n//     return (\n//         <div className=\"card log-sheet-container\">\n//             <div className=\"card-header bg-secondary text-white\">\n//                 <h5 className=\"mb-0\">Daily Log Sheets</h5>\n//             </div>\n//             <div className=\"card-body p-0\">\n//                 {logSheets.map((sheet, index) => {\n//                     const statusCounts = calculateStatusHours(sheet.log);\n//                     const drivingHours = statusCounts.D;\n//                     const milesDriven = calculateMilesDriven(drivingHours);\n//                     return (\n//                         <div key={index} className=\"mb-4\">\n//                             <h6 className=\"px-3 pt-3\">Day {sheet.day}</h6>\n//                             <div className=\"table-responsive\">\n//                                 <table className=\"table table-bordered table-sm log-sheet-table\">\n//                                     <thead>\n//                                         <tr>\n//                                             <th className=\"bg-light\">Hour</th>\n//                                             {Array.from({ length: 24 }, (_, i) => (\n//                                                 <th key={i} className=\"bg-light text-center\">\n//                                                     {i}\n//                                                     {(i === 6 || i === 12 || i === 18) && (\n//                                                         <div className=\"mid-day-marker\">\n//                                                             {i === 6 ? '6 AM' : i === 12 ? '12 PM' : '6 PM'}\n//                                                         </div>\n//                                                     )}\n//                                                 </th>\n//                                             ))}\n//                                         </tr>\n//                                     </thead>\n//                                     <tbody>\n//                                         <tr>\n//                                             <td className=\"bg-light\">Status</td>\n//                                             {sheet.log.map((status, hour) => (\n//                                                 <td key={hour} className={`text-center ${getStatusClass(status)}`}>\n//                                                     {status}\n//                                                 </td>\n//                                             ))}\n//                                         </tr>\n//                                     </tbody>\n//                                 </table>\n//                             </div>\n//                             <div className=\"px-3 pb-3\">\n//                                 <p><strong>Total Miles Driven:</strong> {milesDriven} miles</p>\n//                                 <p><strong>Status Summary:</strong></p>\n//                                 <ul>\n//                                     <li>Off Duty: {statusCounts.OFF} hours</li>\n//                                     <li>Sleeper Berth: {statusCounts.SB} hours</li>\n//                                     <li>Driving: {statusCounts.D} hours</li>\n//                                     <li>On Duty (Not Driving): {statusCounts.ON} hours</li>\n//                                 </ul>\n//                             </div>\n//                         </div>\n//                     );\n//                 })}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default LogSheet;\n\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogSheet = ({\n  logSheets\n}) => {\n  if (!logSheets || logSheets.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info mt-4\",\n      children: \"No log sheets available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 16\n    }, this);\n  }\n  const getStatusClass = status => {\n    switch (status) {\n      case 'ON':\n        return 'bg-warning text-white';\n      case 'D':\n        return 'bg-primary text-white';\n      case 'SB':\n        return 'bg-success text-white';\n      case 'OFF':\n        return 'bg-secondary text-white';\n      default:\n        return 'bg-light';\n    }\n  };\n  const calculateMilesDriven = drivingHours => {\n    const avgSpeed = 60; // From backend AVG_SPEED\n    return drivingHours * avgSpeed;\n  };\n  const calculateStatusHours = log => {\n    const statusCounts = {\n      ON: 0,\n      D: 0,\n      SB: 0,\n      OFF: 0\n    };\n    log.forEach(status => {\n      statusCounts[status] = (statusCounts[status] || 0) + 1;\n    });\n    return statusCounts;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card log-sheet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header bg-secondary text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-0\",\n        children: \"Daily Log Sheets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body p-0\",\n      children: logSheets.map((sheet, index) => {\n        const statusCounts = calculateStatusHours(sheet.log);\n        const drivingHours = statusCounts.D;\n        const milesDriven = calculateMilesDriven(drivingHours);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"px-3 pt-3\",\n            children: [\"Day \", sheet.day]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-bordered log-sheet-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"bg-light fixed-width-label\",\n                    children: \"Hour\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 45\n                  }, this), Array.from({\n                    length: 24\n                  }, (_, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"bg-light text-center\",\n                    children: [i, (i === 6 || i === 12 || i === 18) && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mid-day-marker\",\n                      children: i === 6 ? '6 AM' : i === 12 ? '12 PM' : '6 PM'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 57\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"bg-light fixed-width-label\",\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 45\n                  }, this), sheet.log.map((status, hour) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: `text-center ${getStatusClass(status)}`,\n                    children: status\n                  }, hour, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-3 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total Miles Driven:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 36\n              }, this), \" \", milesDriven, \" miles\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status Summary:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Off Duty: \", statusCounts.OFF, \" hours\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Sleeper Berth: \", statusCounts.SB, \" hours\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Driving: \", statusCounts.D, \" hours\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"On Duty (Not Driving): \", statusCounts.ON, \" hours\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 9\n  }, this);\n};\n_c = LogSheet;\nexport default LogSheet;\nvar _c;\n$RefreshReg$(_c, \"LogSheet\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LogSheet","logSheets","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getStatusClass","status","calculateMilesDriven","drivingHours","avgSpeed","calculateStatusHours","log","statusCounts","ON","D","SB","OFF","forEach","map","sheet","index","milesDriven","day","Array","from","_","i","hour","_c","$RefreshReg$"],"sources":["C:/Users/Cyber Defense/Desktop/driver/frontend/src/components/LogSheet.js"],"sourcesContent":["// // src/components/LogSheet.js\r\n// import React from 'react';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const LogSheet = ({ logSheets }) => {\r\n//     if (!logSheets || logSheets.length === 0) {\r\n//         return <div className=\"alert alert-warning mt-4\">No log sheets available</div>;\r\n//     }\r\n\r\n//     const getStatusDescription = (status) => ({\r\n//         ON: 'On Duty (e.g., loading/unloading)',\r\n//         D: 'Driving',\r\n//         SB: 'Sleeper Berth (rest)',\r\n//         OFF: 'Off Duty'\r\n//     }[status] || 'Unknown');\r\n\r\n//     return (\r\n//         <div className=\"log-sheet\">\r\n//             <h3 className=\"card-title\">Daily Log Sheets</h3>\r\n//             {logSheets.map((sheet) => (\r\n//                 <div key={sheet.day} className=\"card mb-3\">\r\n//                     <div className=\"card-header\">Day {sheet.day}</div>\r\n//                     <div className=\"card-body\">\r\n//                         <table className=\"table table-bordered\">\r\n//                             <thead>\r\n//                                 <tr>\r\n//                                     <th>Hour</th>\r\n//                                     {Array.from({ length: 24 }, (_, i) => (\r\n//                                         <th key={i}>{i}</th>\r\n//                                     ))}\r\n//                                 </tr>\r\n//                             </thead>\r\n//                             <tbody>\r\n//                                 <tr>\r\n//                                     <td>Status</td>\r\n//                                     {sheet.log.map((status, hour) => (\r\n//                                         <td\r\n//                                             key={hour}\r\n//                                             className={`${\r\n//                                                 status === 'D' ? 'bg-primary' :\r\n//                                                 status === 'ON' ? 'bg-warning' :\r\n//                                                 status === 'SB' ? 'bg-success' :\r\n//                                                 'bg-secondary'\r\n//                                             } text-center`}\r\n//                                             title={getStatusDescription(status)}\r\n//                                         >\r\n//                                             {status}\r\n//                                         </td>\r\n//                                     ))}\r\n//                                 </tr>\r\n//                             </tbody>\r\n//                         </table>\r\n//                     </div>\r\n//                 </div>\r\n//             ))}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default LogSheet;\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const LogSheet = ({ logSheets }) => {\r\n//     if (!logSheets || logSheets.length === 0) {\r\n//         return <div className=\"alert alert-info mt-4\">No log sheets available</div>;\r\n//     }\r\n\r\n//     const getStatusClass = (status) => {\r\n//         switch (status) {\r\n//             case 'ON': return 'bg-warning text-white';\r\n//             case 'D': return 'bg-primary text-white';\r\n//             case 'SB': return 'bg-success text-white';\r\n//             case 'OFF': return 'bg-secondary text-white';\r\n//             default: return 'bg-light';\r\n//         }\r\n//     };\r\n\r\n//     const calculateMilesDriven = (drivingHours) => {\r\n//         const avgSpeed = 60; // From backend AVG_SPEED\r\n//         return drivingHours * avgSpeed;\r\n//     };\r\n\r\n//     const calculateStatusHours = (log) => {\r\n//         const statusCounts = { ON: 0, D: 0, SB: 0, OFF: 0 };\r\n//         log.forEach(status => {\r\n//             statusCounts[status] = (statusCounts[status] || 0) + 1;\r\n//         });\r\n//         return statusCounts;\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"card log-sheet-container\">\r\n//             <div className=\"card-header bg-secondary text-white\">\r\n//                 <h5 className=\"mb-0\">Daily Log Sheets</h5>\r\n//             </div>\r\n//             <div className=\"card-body p-0\">\r\n//                 {logSheets.map((sheet, index) => {\r\n//                     const statusCounts = calculateStatusHours(sheet.log);\r\n//                     const drivingHours = statusCounts.D;\r\n//                     const milesDriven = calculateMilesDriven(drivingHours);\r\n//                     return (\r\n//                         <div key={index} className=\"mb-4\">\r\n//                             <h6 className=\"px-3 pt-3\">Day {sheet.day}</h6>\r\n//                             <div className=\"table-responsive\">\r\n//                                 <table className=\"table table-bordered table-sm log-sheet-table\">\r\n//                                     <thead>\r\n//                                         <tr>\r\n//                                             <th className=\"bg-light\">Hour</th>\r\n//                                             {Array.from({ length: 24 }, (_, i) => (\r\n//                                                 <th key={i} className=\"bg-light text-center\">\r\n//                                                     {i}\r\n//                                                     {(i === 6 || i === 12 || i === 18) && (\r\n//                                                         <div className=\"mid-day-marker\">\r\n//                                                             {i === 6 ? '6 AM' : i === 12 ? '12 PM' : '6 PM'}\r\n//                                                         </div>\r\n//                                                     )}\r\n//                                                 </th>\r\n//                                             ))}\r\n//                                         </tr>\r\n//                                     </thead>\r\n//                                     <tbody>\r\n//                                         <tr>\r\n//                                             <td className=\"bg-light\">Status</td>\r\n//                                             {sheet.log.map((status, hour) => (\r\n//                                                 <td key={hour} className={`text-center ${getStatusClass(status)}`}>\r\n//                                                     {status}\r\n//                                                 </td>\r\n//                                             ))}\r\n//                                         </tr>\r\n//                                     </tbody>\r\n//                                 </table>\r\n//                             </div>\r\n//                             <div className=\"px-3 pb-3\">\r\n//                                 <p><strong>Total Miles Driven:</strong> {milesDriven} miles</p>\r\n//                                 <p><strong>Status Summary:</strong></p>\r\n//                                 <ul>\r\n//                                     <li>Off Duty: {statusCounts.OFF} hours</li>\r\n//                                     <li>Sleeper Berth: {statusCounts.SB} hours</li>\r\n//                                     <li>Driving: {statusCounts.D} hours</li>\r\n//                                     <li>On Duty (Not Driving): {statusCounts.ON} hours</li>\r\n//                                 </ul>\r\n//                             </div>\r\n//                         </div>\r\n//                     );\r\n//                 })}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default LogSheet;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst LogSheet = ({ logSheets }) => {\r\n    if (!logSheets || logSheets.length === 0) {\r\n        return <div className=\"alert alert-info mt-4\">No log sheets available</div>;\r\n    }\r\n\r\n    const getStatusClass = (status) => {\r\n        switch (status) {\r\n            case 'ON': return 'bg-warning text-white';\r\n            case 'D': return 'bg-primary text-white';\r\n            case 'SB': return 'bg-success text-white';\r\n            case 'OFF': return 'bg-secondary text-white';\r\n            default: return 'bg-light';\r\n        }\r\n    };\r\n\r\n    const calculateMilesDriven = (drivingHours) => {\r\n        const avgSpeed = 60; // From backend AVG_SPEED\r\n        return drivingHours * avgSpeed;\r\n    };\r\n\r\n    const calculateStatusHours = (log) => {\r\n        const statusCounts = { ON: 0, D: 0, SB: 0, OFF: 0 };\r\n        log.forEach(status => {\r\n            statusCounts[status] = (statusCounts[status] || 0) + 1;\r\n        });\r\n        return statusCounts;\r\n    };\r\n\r\n    return (\r\n        <div className=\"card log-sheet-container\">\r\n            <div className=\"card-header bg-secondary text-white\">\r\n                <h5 className=\"mb-0\">Daily Log Sheets</h5>\r\n            </div>\r\n            <div className=\"card-body p-0\">\r\n                {logSheets.map((sheet, index) => {\r\n                    const statusCounts = calculateStatusHours(sheet.log);\r\n                    const drivingHours = statusCounts.D;\r\n                    const milesDriven = calculateMilesDriven(drivingHours);\r\n                    return (\r\n                        <div key={index} className=\"mb-4\">\r\n                            <h6 className=\"px-3 pt-3\">Day {sheet.day}</h6>\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-bordered log-sheet-table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"bg-light fixed-width-label\">Hour</th>\r\n                                            {Array.from({ length: 24 }, (_, i) => (\r\n                                                <th key={i} className=\"bg-light text-center\">\r\n                                                    {i}\r\n                                                    {(i === 6 || i === 12 || i === 18) && (\r\n                                                        <div className=\"mid-day-marker\">\r\n                                                            {i === 6 ? '6 AM' : i === 12 ? '12 PM' : '6 PM'}\r\n                                                        </div>\r\n                                                    )}\r\n                                                </th>\r\n                                            ))}\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td className=\"bg-light fixed-width-label\">Status</td>\r\n                                            {sheet.log.map((status, hour) => (\r\n                                                <td key={hour} className={`text-center ${getStatusClass(status)}`}>\r\n                                                    {status}\r\n                                                </td>\r\n                                            ))}\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <div className=\"px-3 pb-3\">\r\n                                <p><strong>Total Miles Driven:</strong> {milesDriven} miles</p>\r\n                                <p><strong>Status Summary:</strong></p>\r\n                                <ul>\r\n                                    <li>Off Duty: {statusCounts.OFF} hours</li>\r\n                                    <li>Sleeper Berth: {statusCounts.SB} hours</li>\r\n                                    <li>Driving: {statusCounts.D} hours</li>\r\n                                    <li>On Duty (Not Driving): {statusCounts.ON} hours</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogSheet;"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAChC,IAAI,CAACA,SAAS,IAAIA,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;IACtC,oBAAOH,OAAA;MAAKI,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/E;EAEA,MAAMC,cAAc,GAAIC,MAAM,IAAK;IAC/B,QAAQA,MAAM;MACV,KAAK,IAAI;QAAE,OAAO,uBAAuB;MACzC,KAAK,GAAG;QAAE,OAAO,uBAAuB;MACxC,KAAK,IAAI;QAAE,OAAO,uBAAuB;MACzC,KAAK,KAAK;QAAE,OA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}